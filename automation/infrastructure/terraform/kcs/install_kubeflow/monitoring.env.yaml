namespaceOverride: "kubeflow-monitoring"

nodeExporter:
  enabled: false
kubeStateMetrics:
  enabled: false

prometheusOperator:
  serviceMonitorSelectorNilUsesHelmValues: false
  namespaces:
    releaseNamespace: true
    additional:
    - kubeflow

prometheus:
  prometheusSpec:
#    secrets:
#      - kubeflow-monitoring-client
    additionalScrapeConfigs:
      # Monitoring ml-pipeline (aka Kubeflow Pipelines API server)
      - job_name: 'ml-pipeline'
        #kubernetes_sd_configs:
        #  - role: node
        scrape_interval: 15s
        static_configs:
          - targets: ['ml-pipeline.kubeflow:8888']

      # Monitoring katib-controller
      - job_name: 'katib-controller'
        scrape_interval: 15s
        scheme: http
        static_configs:
          - targets: ['katib-controller.kubeflow:8080']

      # Monitoring katib-controller
      - job_name: 'kfserving-controller-manager-metrics-service'
        scrape_interval: 15s
        scheme: https
        tls_config:
          insecure_skip_verify: true
        static_configs:
          - targets: ['kfserving-controller-manager-metrics-service.kubeflow:8443']

      # Monitoring TF and around
      - job_name: 'learning-engines'
        scrape_interval: 15s
        static_configs:
          - targets: ['pytorch-operator.kubeflow:8443', 'tf-job-operator.kubeflow:8443']

      # Monitoring TF and around
      - job_name: 'learning-engines-https'
        scrape_interval: 15s
        scheme: https
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          insecure_skip_verify: true
        static_configs:
          - targets: ['tensorboard-controller-controller-manager-metrics-service.kubeflow:8443']

grafana:
  namespaceOverride: "kubeflow-monitoring"
