---
# Source: debezium-connect/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bloganalytics-debezium
  labels:
    chart: "debezium-connect-0.1.0"
    app: bloganalytics-debezium-connect
    chart: "debezium-connect-0.1.0"
    release: "bloganalytics"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - port: 8083
    targetPort: 8083
    protocol: TCP
    name: connect
  selector:
    app: bloganalytics-debezium

---
# Source: debezium-connect/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: bloganalytics-debezium
  labels:
    app: bloganalytics-debezium
    chart: "debezium-connect-0.1.0"
    release: "bloganalytics"
    heritage: "Tiller"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: bloganalytics-debezium
    spec:
      containers:
      - name: bloganalytics-debezium
        image: "debezium/connect:1.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: GROUP_ID
          value: "1"
        - name: CONFIG_STORAGE_TOPIC
          value: my_connect_configs
        - name: OFFSET_STORAGE_TOPIC
          value: my_connect_offsets
        - name: BOOTSTRAP_SERVERS
          value: "{{.Services.Kafka.Endpoint}}"
        ports:
        - containerPort: 8083
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bloganalytics-debezium
  labels:
    app.kubernetes.io/name: wordpress
    helm.sh/chart: wordpress-9.0.4
    app.kubernetes.io/instance: bloganalytics
    app.kubernetes.io/managed-by: Tiller
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - host: debezium.bloganalytics.foo.org
    http:
      paths:
      - path: /(.*)
        backend:
          serviceName: bloganalytics-debezium
          servicePort: connect
  - host: bloganalytics.foo.org
    http:
      paths:
      - path: /debezium/(.*)
        backend:
          serviceName: bloganalytics-debezium
          servicePort: connect
